import Head from 'next/head'
import styles from '../../styles/Home.module.css'
import * as React from "react";
import {useState} from "react";

const oauth2Addr = "https://oauth2.disism.com"
const handlerNewApp = async (name: string, hpUrl: string, desc: string, cb: string) => {
  const token = localStorage.getItem("oauth_access_token")
  console.log(token)
  const myHeaders = new Headers();
  myHeaders.append("Authorization", `Bearer ${token}`);

  const formdata = new FormData();
  formdata.append("name", name);
  formdata.append("homepage_url", hpUrl);
  formdata.append("description", desc);
  // http://localhost:3000/auth/authorize
  formdata.append("authorization_callback_url", cb);

  const requestOptions: RequestInit = {
    method: 'POST',
    headers: myHeaders,
    body: formdata,
    redirect: 'follow'
  };

  const x = await fetch(`${oauth2Addr}/api/v1/applications/new`, requestOptions)
  return x.json()
}

export default function Applications() {

  const [name, setName] = useState("")
  const [homepageUrl, setHomepageUrl] = useState("")
  const [description, setDescription] = useState("")
  const [callbackUri, setCallbackUri] = useState("")

  const newApp = async () => {
    const x = await handlerNewApp(name, homepageUrl, description, callbackUri)
    console.log(x)
  }
  return (
    <>
      <Head>
        <title>OAuth2 | Applications</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className="flex">
          <div>
            <label>Name</label>
            <input
              type="text"
              value={name}
              onChange={e => setName(e.target.value)}
            />
          </div>
          <div>
            <label>Homepage Url</label>
            <input
              type="text"
              value={homepageUrl}
              onChange={e => setHomepageUrl(e.target.value)}
            />
          </div>
          <div>
            <label>Description</label>
            <input
              type="text"
              value={description}
              onChange={e => setDescription(e.target.value)}
            />
          </div>
          <div>
            <label>Authorization Callback Url</label>
            <input
              type="text"
              value={callbackUri}
              onChange={e => setCallbackUri(e.target.value)}
            />
          </div>

          <button onClick={() => newApp()}> Ok</button>
        </div>

      </main>
    </>
  )
}
